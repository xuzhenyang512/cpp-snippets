{
	"main": {
		"prefix": "main",
		"body": [
			"int main (int argc, char const *argv[]) {",
			"	${1:/* code */}",
			"	return 0;",
			"}\n"
		],
		"description": "main(…)"
	},
	"do": {
		"prefix": "do",
		"body": "do {\n\t${1:/* code */}\n} while (${2:/* condition */});\n",
		"description": "Do While Loop "
	},
	"while": {
		"prefix": "while",
		"body": "while (${1:/* condition */}) {\n\t${2:/* code */}\n}\n",
		"description": "While Loop"
	},
	"for": {
		"prefix": "for",
		"body": "for (int ${1:i} = 0; ${1:i} < ${2:count}; ${1:i}++) {\n\t${3:/* code */}\n}\n",
		"description": "For Loop "
	},
	"if": {
		"prefix": "if",
		"body": "if (${1:/* condition */}) {\n\t${0:/* code */}\n}",
		"description": "if(…)"
	},
	"else": {
		"prefix": "else",
		"body": "else {\n\t${1:/* code */}\n}",
		"description": "else {…}"
	},
	"elseif": {
		"prefix": "elseif",
		"body": "else if (${1:/* condition */}) {\n\t${0:/* code */}\n}",
		"description": "else if(…)"
	},
	"ifelse": {
		"prefix": "ifelse",
		"body": "if (${1:/* condition */}) {\n\t${2:/* code */}\n} else {\n\t${0:/* code */}\n}",
		"description": "if(…) else"
	},
	"ifelif": {
		"prefix": "ifelif",
		"body": "if (${1:/* condition */}) {\n\t${2:/* code */}\n} else if (${3:/* condition */}) {\n\t${4:/* code */}\n} else {\n\t${0:/* code */}\n}",
		"description": "if(…) else if(…) else"
	},
	"forever": {
		"prefix": "forev",
		"body": "for (;;) {\n\t${0:/* code */}\n}\n",
		"description": "Forever Loop"
	},
	"return": {
		"prefix": "return",
		"body": "return ${1:/* code */};",
		"description": "return"
	},
	"#ifndef": {
		"prefix": "#ifndef",
		"body": "#ifndef ${1:/*define*/}\n#define ${1:/*define*/}\n${2:/* code */}\n#endif //${1:/*define*/}\n",
		"description": "ifndef (…)"
	},
	"#ifdef": {
		"prefix": "#ifdef",
		"body": "#ifdef ${1:/*define*/}\n ${2:/* code */}\n#endif //${1:/*define*/}\n",
		"description": "ifdef (…)"
	},
	"switch": {
		"prefix": "switch",
		"body": [
			"switch (${1}) {",
			"case ${2: /*case*/}:",
			"	$3",
			"	break;",
			"default:",
			"	break;",
			"}"
		],
		"description": "switch {...}"
	},
	"case": {
		"prefix": "case",
		"body": [
			"case ${1: /*case*/}:",
			"	$2",
			"	break;"
		],
		"description": "case (...)"
	},
	"enum": {
		"prefix": "enum",
		"body": [
			"enum ${1:} {",
			"	$2",
			"};\n"
		],
		"description": "enum ..."
	},
	"struct": {
		"prefix": "struct",
		"body": [
			"struct ${1} {",
			"	$2",
			"};\n"
		],
		"description": "struct ..."
	},
	"union": {
		"prefix": "union",
		"body": [
			"union ${1} {",
			"	$2",
			"};"
		],
		"description": "union {...}"
	},
	"#include": {
		"prefix": "#include",
		"body": "#include <$1>",
		"description": "#include <..>"
	},
	"#ifelif": {
		"prefix": "#ifelif",
		"body": [
			"#if $1",
			"	$3",
			"#elif $2",
			"	$4",
			"#endif"
		]
	},
	"fileheader": {
		"prefix": "fileheader",
		"body": [
			"/**",
			"******************************************************************************",
			"* @file	$1",
			"* @author 	$2",
			"* @version",
			"* @date",
			"* @brief",
			"******************************************************************************",
			"*/"
		],
		"description": "File Header"
	}
}
